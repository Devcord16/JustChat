<!DOCTYPE html>
<html>
  <head>
    <title>Fathin's Connection</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/emoji-mart/dist/umd/emoji-mart.css"
    />
    <%- include("import.ejs") %>
  </head>
  <style>
    :root {
      --bg: #f5eee6;
      --primary: #f3d7ca;
      --secondary: #e1c7bb;
    }
    body,
    .card-body {
      background-color: var(--bg);
    }
    body {
      background: repeating-linear-gradient(
        45deg,
        black,
        black 1px,
        var(--bg) 1px,
        var(--bg) 20px
      );
    }
    .bg-light {
      background-color: var(--primary) !important;
      border-bottom: solid 3px black;
      border-left: solid 3px black;
      border-right: solid 3px black;
    }
    .navbar-brand {
      font-weight: bold;
    }

    .container {
      margin-top: 70px;
      margin-bottom: 100px;
    }

    .card-body {
      border-radius: 8px;
      padding: 10px;
      border: solid 3px black;
      -webkit-box-shadow: 8px 8px 0px -4px rgba(0, 0, 0, 1);
      -moz-box-shadow: 8px 8px 0px -4px rgba(0, 0, 0, 1);
      box-shadow: 8px 8px 0px -4px rgba(0, 0, 0, 1);
    }

    img {
      max-width: 400px;
      object-fit: cover;
      margin-top: 20px;
      border-radius: 16px;
    }
    .loading-spinner {
      border: 4px solid rgba(255, 255, 255, 0.3);
      border-radius: 50%;
      border-top: 4px solid #dcddde;
      width: 20px;
      height: 20px;
      animation: spin 1s linear infinite;
      margin-right: 10px;
    }

    @keyframes spin {
      0% {
        transform: rotate(0deg);
      }
      100% {
        transform: rotate(360deg);
      }
    }
    .message-image {
      width: 100%;
      border: 3px solid black !important;
    }

    /* Memberikan warna latar belakang utama pada setiap item ganjil */
    .list-group-item {
      white-space: normal;
      border: 2px solid black !important;
      background-color: #f7f7f7 !important;
      overflow: auto;
    }
    .form-control {
      border: solid 3px black;
    }
    .card-footer {
      border-top: solid 3px black;
      background: var(--bg);
    }
    .btn-secondary {
      background-color: var(--secondary);
      color: black;
      border: 3px solid black !important;
    }
    .btn-primary {
      background-color: var(--primary);
      color: black;
      border: 3px solid black !important;
    }
  </style>
  <body>
    <nav class="navbar navbar-expand-lg navbar-light fixed-top bg-light">
      <a class="navbar-brand" href="#" id="juduul">Fathin's Connection</a>

      <ul class="navbar-nav ml-auto">
        <li class="nav-item">
          <button
            class="btn btn-outline-danger rounded-pill"
            onclick="logOut()"
          >
            <i class="fa fa-sign-out" aria-hidden="true"></i>
          </button>
        </li>
      </ul>
    </nav>
    <div class="container" style="margin-bottom: 150px">
      <div class="row pt-4 pb-4">
        <div class="col-sm-8">
          <div class="card-body">
            <ul id="messages" class="list-group">
              <% chat.forEach(element => { %>
              <!-- If this is an image message -->
              <li id="wa" class="list-group-item border-0">
                <strong class="name" style="color: <%= element.color %>">
                  <span style="color: gray !important"
                    ><%= element.timestamp.replace("AM", "").replace("PM", "")
                    %></span
                  >
                  <span class="name-value"><%= element.username %></span>
                </strong>
                <% if(!element.isImage) {%>
                <span class="text-value"> <%= element.value %> </span><% } %>
                <span class="text-value d-none"> </span>
                <br />

                <img
                  src="<%= element.value %>"
                  class="message-image"
                  alt="Image"
                  onerror="this.remove()"
                /><% }); %>
              </li>
            </ul>
          </div>
        </div>
        <div class="col-sm-4">
          <div class="card bg-transparent border-0">
            <img
              src="https://media1.tenor.com/m/uGN3n2O03GIAAAAC/anime-wave.gif"
              class="card-img-top message-image border-lg"
              style="border-radius: 0 !important"
              alt="..."
            />
            <div class="card-body mt-2">
              <h3 class="card-title">System</h3>
              <p class="card-text">Halo, rulesnya jangan spam aja ya:)</p>
            </div>
            <div class="card-body mt-2">
              <h3 class="card-title">About</h3>
              <p class="card-text">Dibuat Oleh Fathin, cek portofolionya yuk</p>
              <a class="btn btn-secondary" href="https://www.fathin.my.id"
                >Apaan Tuh?</a
              >
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      class="card-footer fixed-bottom mt-3 d-flex align-items-center"
      style="flex-direction: row"
    >
      <form
        id="image-form"
        enctype="multipart/form-data"
        class="flex-shrink-0 mr-2"
      >
        <label
          for="image"
          class="btn btn-secondary mt-3 p-2"
          style="height: 100%"
        >
          <input
            type="file"
            name="image"
            id="image"
            accept="image/*"
            style="display: none"
            onchange="handleImageUpload()"
          />
          <i class="fa fa-file-image-o" aria-hidden="true"></i>
        </label>
        <button
          type="button"
          onclick="uploadImage()"
          class="btn btn-primary mt-2 p-2"
          style="height: 100%"
        >
          <i class="fa fa-upload" aria-hidden="true"></i>
        </button>
        <span
          id="upload-spinner"
          class="loading-spinner"
          style="display: none"
        ></span>
        <span id="file-size-error" style="color: red; display: none"
          >File size exceeds the limit.</span
        >
      </form>
      <form id="form" action="" class="form-inline flex-grow-1">
        <div class="input-group w-100">
          <input
            id="input"
            autocomplete="off"
            class="form-control p-4"
            placeholder="Message at # ðŸ’¬ General!"
          />
          <div class="input-group-append">
            <button class="btn btn-secondary" type="button" onclick="send()">
              <i class="fa fa-paper-plane" aria-hidden="true"></i>
            </button>
          </div>
        </div>
      </form>
    </div>
    <audio id="notification">
      <source src="tut_turu.mp3" type="audio/mp3" />
    </audio>

    <script src="/socket.io/socket.io.js"></script>
    <script>
      const userData = localStorage.getItem("loggedInUser");
      const notifElement = document.getElementById("notification");

      function checkMessages() {
        const messages = document.querySelectorAll("#messages > li");
        console.log(messages);

        // Iterate through existing messages
        messages.forEach((child) => {
          const valueItem = child.querySelector(".text-value");
          const imageElement = child.querySelector(".message-image");
          const nameItem = child.querySelector(".name-value");

          // Check if the message contains a tag or pmessages for userData
          if (
            (valueItem && valueItem.textContent.includes("@" + userData)) ||
            valueItem.textContent.includes("@everyone")
          ) {
            child.style.setProperty(
              "background-color",
              "rgba(243, 202, 82, 0.2)",
              "important"
            );
          }

          if (valueItem && valueItem.textContent.includes("pmessages: ")) {
            // Check if pmessages is for userData
            if (
              !valueItem.textContent.includes("@" + userData) ||
              !nameItem.textContent.includes(userData)
            ) {
              // Remove the message if it's not for userData
              child.remove();
              if (imageElement) {
                imageElement.remove();
              }
            }
          }
        });
      }

      checkMessages();

      function uploadImage() {
        const input = document.getElementById("image");
        const file = input.files[0];
        const maxFileSizeMB = 1; // Set the maximum file size to 100 KB

        if (file) {
          if (file.size > maxFileSizeMB * 1024 * 1024) {
            document.getElementById("file-size-error").style.display =
              "inline-block";
            return;
          } else {
            document.getElementById("file-size-error").style.display = "none";
          }

          const reader = new FileReader();
          reader.onload = (e) => {
            const imageData = e.target.result;
            const username = userData; // Gantilah dengan cara Anda mendapatkan nama pengguna

            // Kirim data gambar ke server menggunakan Socket.IO
            socket.emit("image", { username, imageData });
          };

          reader.readAsDataURL(file);
        }
      }
      document.getElementById("juduul").textContent = userData;

      function logOut() {
        localStorage.removeItem("loggedInUser");
        window.location.href = "/";
      }

      if (!userData) {
        window.location.href = "/";
      }

      const socket = io();
      const form = document.getElementById("form");
      const input = document.getElementById("input");
      const messages = document.getElementById("messages");

      form.addEventListener("submit", (e) => {
        e.preventDefault();
        send();
      });
      function send() {
        if (input.value) {
          socket.emit("chat message", {
            username: userData,
            value: input.value,
          });
          input.value = "";
        }
      }
      socket.on("chat message", (msg) => {
        const item = document.createElement("li");
        const usernameElement = document.createElement("strong");
        const timestampElement = document.createElement("span");
        const valueItem = document.createElement("span");
        const nameItem = document.createElement("span");

        timestampElement.textContent = msg.timestamp
          .replace("AM", "")
          .replace("PM", "");
        timestampElement.style.color = "gray";
        usernameElement.style.color = msg.color;

        valueItem.textContent += msg.value;
        valueItem.classList.add("text-value");
        nameItem.textContent = ` ${msg.username} `;
        nameItem.classList.add("name-value");
        usernameElement.appendChild(timestampElement);
        usernameElement.appendChild(nameItem);

        if (msg.value.includes("@" + userData || "@everyone")) {
          if (!msg.value.includes("pmessages:")) {
            item.style.setProperty(
              "background-color",
              "rgba(243, 202, 82, 0.2)",
              "important"
            );
          }
          console.log(msg.username);
          notifElement.play();
        }

        item.classList.add("list-group-item");
        item.classList.add("border-0");

        const imageElement = document.createElement("img");
        imageElement.classList.add("message-image");
        imageElement.src = msg.value;
        imageElement.onerror = function () {
          this.remove(); // Hapus elemen gambar jika terjadi error
        };
        if (msg.value.includes("pmessages: ")) {
          if (
            msg.value.includes("@" + userData) ||
            msg.username.includes(userData)
          ) {
            item.appendChild(usernameElement);
            item.appendChild(valueItem);
            item.appendChild(imageElement);
            messages.appendChild(item);
          }
        } else {
          item.appendChild(usernameElement);
          item.appendChild(valueItem);
          item.appendChild(imageElement);
          messages.appendChild(item);
        }

        // Scroll to the bottom after adding a new message with a slight delay
        window.scrollTo(0, document.body.scrollHeight);
      });

      socket.on("image", (msg) => {
        const item = document.createElement("li");
        const usernameElement = document.createElement("strong");
        const timestampElement = document.createElement("span");

        timestampElement.textContent = msg.timestamp
          .replace("AM", "")
          .replace("PM", "");
        timestampElement.style.color = "gray";
        usernameElement.style.color = msg.color;
        usernameElement.appendChild(timestampElement);

        usernameElement.appendChild(
          document.createTextNode(` ${msg.username} `)
        );

        item.appendChild(usernameElement);

        item.classList.add("list-group-item", "border-0");
        const imageElement = document.createElement("img");
        imageElement.src = msg.imageData;
        imageElement.classList.add("message-image");

        messages.appendChild(item);
        messages.appendChild(imageElement);

        // Scroll to the bottom after adding a new message with a slight delay
        window.scrollTo(0, document.body.scrollHeight);
      });

      // Scroll to the bottom when the page is initially loaded
      window.onload = function () {
        setTimeout(() => {
          window.scrollTo(0, document.body.scrollHeight);
        }, 100);
      };
    </script>
  </body>
</html>
